<ResourceDictionary x:Class="Themes.Theme"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush Color="#171717" x:Key="bgDark" />
    <SolidColorBrush Color="#2C2C2C" x:Key="primaryDark" />
    <SolidColorBrush Color="#1f1f1f" x:Key="secondaryDark" />
    <SolidColorBrush Color="#434343" x:Key="borderDarkPrimary" />
    <SolidColorBrush Color="#393939" x:Key="borderDarkSecondary" />
    <SolidColorBrush Color="#E5E5E5" x:Key="primaryLight" />
    <SolidColorBrush Color="#979797" x:Key="secondaryLight" />
    <SolidColorBrush Color="#5844FE" x:Key="highlight" />
    <SolidColorBrush Color="#382BA4" x:Key="highlightDark" />

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource highlight}" />
        <Setter Property="Background" Value="{StaticResource bgDark}" />
        <Setter Property="Foreground" Value="{StaticResource primaryLight}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              ResizeBorderThickness="6"
                              CornerRadius="0"
                              GlassFrameThickness="1"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid Height="30" x:Name="titlebar"
                                      Background="black"
                                      VerticalAlignment="Top" Margin="0">
                                    <DockPanel Margin="0,0,130,0">
                                        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4,4,4,0" 
                                               Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Height="22"  />
                                        <TextBlock Margin="5,3"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Stretch"
                                                   TextWrapping="NoWrap"
                                                   FontSize="14" Width="Auto"
                                                   Foreground="{StaticResource primaryLight}"
                                                   Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"   
                                                   Grid.Column="1" TextAlignment="Left"/>
                                    </DockPanel>
                                    <StackPanel Orientation="Horizontal"
                                        Grid.Column="0" HorizontalAlignment="Right">
                                        <Button x:Name="btnMinimize"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource ResizeWindowButton}"
                                                Width="40"
                                                VerticalContentAlignment="Bottom"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="Minimize_Event">
                                            <Rectangle Width="10" 
                                                       VerticalAlignment="Center" 
                                                       Margin="1 1 0 0" 
                                                       Stroke="{StaticResource primaryLight}" 
                                                       StrokeThickness="1"/>
                                        </Button>

                                        <Button x:Name="btnRestore"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource ResizeWindowButton}"
                                                Width="40"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="AutoMinimize_Event">
                                            <Grid Width="12" Height="12">
                                                <Rectangle StrokeThickness="1" 
                                                           Stroke="{StaticResource primaryLight}"
                                                           Margin="3,0,0,3"/>
                                                <Rectangle StrokeThickness="1" 
                                                           Fill="{TemplateBinding Background}"
                                                           Stroke="{StaticResource primaryLight}"
                                                           Margin="0 3 3 0"/>
                                            </Grid>
                                        </Button>
                                        <Button x:Name="btnClose"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource CloseWindowButton}"
                                                Width="40"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="CloseWindow_Event">
                                            <Grid Margin="0 1 0 0">
                                                <Line X1="0" Y1="0" X2="11" Y2="11" Stroke="{StaticResource primaryLight}" StrokeThickness="1" />
                                                <Line X1="0" Y2="0" Y1="11" X2="11" Stroke="{StaticResource primaryLight}" StrokeThickness="1" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="8"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="CloseWindowButton" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="true"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch">
            <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="#DD0A1D"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#DD0A1D"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#FF940A14"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF940A14"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ResizeWindowButton" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="true"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch">
            <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource primaryDark}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource primaryDark}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource bgDark}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource bgDark}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource primaryDark}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource borderDarkPrimary}"/>
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Height" Value="22" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource secondaryLight}"/>
                <Setter Property="Background" Value="{DynamicResource secondaryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource secondaryLight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource secondaryLight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource secondaryLight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Background" Value="{DynamicResource primaryDark}" />
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Grid.Row="0" BorderThickness="1 1 1 1" BorderBrush="{DynamicResource borderDarkPrimary}" Background="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Row="0" BorderThickness="1" BorderBrush="{DynamicResource primaryDark}" Background="{TemplateBinding Background}">
                                <Label Foreground="{TemplateBinding Foreground}" Padding="10 2 10 2">
                                    <ContentPresenter Margin="0" ContentSource="Header" RecognizesAccessKey="True" />
                                </Label>
                            </Border>
                            <Border Grid.Row="1" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource borderDarkPrimary}" />

                            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="0" Margin="5" Grid.Row="2" x:Name="Content" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource primaryDark}" />
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border BorderBrush="{DynamicResource borderDarkPrimary}" BorderThickness="1"></Border>
                        <ContentPresenter x:Name="Content" 
                                          Content="{TemplateBinding Content}"
                                          Margin="3"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource secondaryLight}"/>
                <Setter Property="Background" Value="{DynamicResource secondaryDark}"/>
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource highlight}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource highlightDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{DynamicResource primaryDark}" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{DynamicResource highlight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource secondaryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{DynamicResource highlight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Height="10" Width="10" Fill="{TemplateBinding Background}"></Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource secondaryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="Slider" TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid Width="Auto" Height="Auto" Background="{DynamicResource bgDark}">
                        <ScrollViewer Focusable="false" IsTabStop="False" HorizontalScrollBarVisibility="Disabled">
                            <StackPanel IsItemsHost="true"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource secondaryLight}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource primaryLight}"/>
    </Style>
</ResourceDictionary>